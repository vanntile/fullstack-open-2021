version: '3.8'

services:
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    networks:
      - app_backend
      - app_frontend

  frontend:
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    volumes:
      - ./todo-frontend:/usr/src/app
    networks:
      - app_frontend
    environment:
      REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}

  backend:
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    command: npm start
    environment:
      MONGO_URL: ${MONGO_URL}
      REDIS_URL: ${REDIS_URL}
      PORT: ${BACKEND_PORT}
    networks:
      - app_backend
    volumes:
      - ./todo-backend:/usr/src/app

  mongo:
    image: mongo:5.0-focal
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    networks:
      - app_backend
    volumes:
    - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    - mongo_volume:/data/db


  redis:
    image: redis:6.2
    command: ['redis-server', '--appendonly', 'yes']
    networks:
      - app_backend
    volumes:
      - redis_volume:/data

networks:
  app_backend:
  app_frontend:

volumes:
  mongo_volume:
  redis_volume:
